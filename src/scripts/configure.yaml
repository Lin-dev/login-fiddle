---
inputs:
  - valkey                   : 'http_port'
    name                     : 'HTTP port'
    desc                     : 'The HTTP port that the server listens on [number]'
    current_val_rel_filepath : './server/app/config/server.js'
    current_val_regex        : 'http_port: (\d+), // configure.py: server'
    validation_regex         : '^\d+$'
  - valkey                   : 'https_port'
    name                     : 'HTTPs port'
    desc                     : 'The HTTPS port that the server listens on [number]'
    current_val_rel_filepath : './server/app/config/server.js'
    current_val_regex        : 'https_port: (\d+), // configure.py: server'
    validation_regex         : '^\d+$'
  - valkey                   : 'server_host'
    name                     : 'Server host'
    desc                     : 'The servers externally accessible hostname or IP address [host or IP]'
    current_val_rel_filepath : './server/app/config/server.js'
    current_val_regex        : 'server_host: ''([a-zA-Z_0-9.]*)'', // configure.py: server'
    validation_regex         : '^[a-zA-Z_0-9.]+$'
  - valkey                   : 'server_q_longstacksupport'
    name                     : 'Q.js long stack trace support (server)'
    desc                     : 'Enable long stack traces from Q [true or false]'
    current_val_rel_filepath : './server/app/config/server.js'
    current_val_regex        : 'q_longStackSupport: (true|false|undefined), // configure.py: server'
    validation_regex         : '^true|false$'
  - valkey                   : 'static_cache_max_age'
    name                     : 'Static cache max age'
    desc                     : 'The maximum length of time a static element is cached by the server [number]'
    current_val_rel_filepath : './server/app/config/server.js'
    current_val_regex        : 'static_max_age: ([\d\*]*), // configure.py: server'
    validation_regex         : '^[\d\*;]+$'

  - valkey                   : 'server_app_log_level'
    name                     : 'Server app log level'
    desc                     : 'Server app/* log level; manually set other and granular logging [log level string]'
    current_val_rel_filepath : './server/app/util/logger/logger_config.json'
    current_val_regex        : '"level": "([^"]*)"'
    validation_regex         : '^[^"]*$'

  - valkey                   : 'db_name'
    name                     : 'DB name'
    desc                     : 'The database name [a valid string]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'name: ''([a-zA-Z_]*)'', // configure.py: database'
    validation_regex         : '^[a-zA-Z_]+$'
  - valkey                   : 'db_password'
    name                     : 'DB user password'
    desc                     : 'The database user password [a valid string]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'password: ''([^\n]*)'', // configure.py: database'
    validation_regex         : '^[^\n]+$'
  - valkey                   : 'db_host'
    name                     : 'DB host'
    desc                     : 'The database host [a URI]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'host: ''([a-zA-Z_.]*)'', // configure.py: database'
    validation_regex         : '^[a-zA-Z_.]*$'
  - valkey                   : 'db_port'
    name                     : 'DB port'
    desc                     : 'The database port [a number, probably greater than 1024]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'port: ''([\d]+)'', // configure.py: database'
    validation_regex         : '^[\d]+$'
  - valkey                   : 'db_schema'
    name                     : 'DB schema'
    desc                     : 'The database schema to use [a valid string]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'schema: ''([a-zA-Z_]*)'', // configure.py: database'
    validation_regex         : '^[a-zA-Z_]+$'
  - valkey                   : 'db_max_conn'
    name                     : 'Maximum DB connections'
    desc                     : 'DB connections pool - maximum number of connections to have open [a number]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'maxConnections: (\d+), // configure.py: database'
    validation_regex         : '^\d+$'
  - valkey                   : 'db_min_conn'
    name                     : 'Minimum DB connections'
    desc                     : 'DB connections pool - minimum number of connections to have open [a number]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'minConnections: (\d+), // configure.py: database'
    validation_regex         : '^\d+$'
  - valkey                   : 'db_max_idle_time'
    name                     : 'Max idle time'
    desc                     : 'Maximum DB connection open idle time (in milliseconds) [a number]'
    current_val_rel_filepath : './server/app/config/database.js'
    current_val_regex        : 'maxIdleTime: (\d+), // configure.py: database'
    validation_regex         : '^\d+$'

  - valkey                   : 'fb_client_id'
    name                     : 'Facebook - client id'
    desc                     : 'For application (client, server config should be equal) [a number]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'client_id: ''(\d*)'', // configure.py: user-facebook'
    validation_regex         : '^\d+$'
  - valkey                   : 'fb_client_secret'
    name                     : 'Facebook - client secret'
    desc                     : 'For application (do not share this info or record it elsewhere) [a hex string]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'client_secret: ''([abcdef\d]*)'', // configure.py: user-facebook'
    validation_regex         : '^[abcdef\d]+$'
  - valkey                   : 'google_client_id'
    name                     : 'Google - client id'
    desc                     : 'For app (client, server config should be equal) [an alphanum string w/ - and .]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'client_id: ''([a-zA-Z\-_.0-9]*)'', // configure.py: user-google'
    validation_regex         : '^[a-zA-Z\-_.0-9]+$'
  - valkey                   : 'google_client_secret'
    name                     : 'Google - client secret'
    desc                     : 'For app (do not share this info or record it elsewhere) [an alphanum string w/ - and .]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'client_secret: ''([a-zA-Z\-_.0-9]*)'', // configure.py: user-google'
    validation_regex         : '^[a-zA-Z\-_.0-9]+$'
  - valkey                   : 'twitter_consumer_key'
    name                     : 'Twitter - consumer key'
    desc                     : 'For application (client, server config should be equal) [an alphanum string]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'consumer_key: ''([a-zA-Z0-9.]*)'', // configure.py: user-twitter'
    validation_regex         : '^[a-zA-Z0-9.]+$'
  - valkey                   : 'twitter_consumer_secret'
    name                     : 'Twitter - consumer secret`'
    desc                     : 'For app (do not share this info or record it elsewhere) [an alphanum string]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'consumer_secret: ''([a-zA-Z0-9]*)'', // configure.py: user-twitter'
    validation_regex         : '^[a-zA-Z0-9]+$'
  - valkey                   : 'logged_in_cookie_name'
    name                     : 'Logged in cookie name'
    desc                     : 'Cookie name set to indicate logged in [alphabet string with _])'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'logged_in_cookie_name: ''([a-zA-Z_]*)'', // configure.py: user-cookie'
    validation_regex         : '^[a-zA-Z_]+$'
  - valkey                   : 'cookie_secret'
    name                     : 'Cookie - secret'
    desc                     : 'To secure server cookies [alphabet string with _])'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'secret: ''([a-zA-Z_]*)'', // configure.py: user-cookie'
    validation_regex         : '^[a-zA-Z_]+$'
  - valkey                   : 'cookie_store_host'
    name                     : 'Cookie - store host'
    desc                     : 'For storing sessions [hostname or IP address])'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'host: ''([a-zA-Z_0-9.]*)'', // configure.py: user-cookie'
    validation_regex         : '^[a-zA-Z_0-9.]+$'
  - valkey                   : 'cookie_store_port'
    name                     : 'Cookie - store port'
    desc                     : 'For storing sessions [number])'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'port: ''(\d+)'', // configure.py: user-cookie'
    validation_regex         : '^\d+$'
  - valkey                   : 'cookie_store_number'
    name                     : 'Cookie - store DB number'
    desc                     : 'To secure server cookies [number]'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'db: (\d+), // configure.py: user-cookie'
    validation_regex         : '^\d+$'
  - valkey                   : 'salt_rounds'
    name                     : 'Salt rounds'
    desc                     : 'For hashing passwords, do not change after any passwords are hashed [number, small])'
    current_val_rel_filepath : './server/app/config/user.js'
    current_val_regex        : 'salt_rounds: (\d+), // configure.py: user-security'
    validation_regex         : '^\d+$'

  - valkey                   : 'client_q_longstacksupport'
    name                     : 'Q.js long stack trace support (client)'
    desc                     : 'Generate long stack traces on error in Q? [true or false]'
    current_val_rel_filepath : './client/js/app/config/config.js'
    current_val_regex        : 'q_longStackSupport: (true|false|undefined), // configure.py: client'
    validation_regex         : '^true|false$'
  - valkey                   : 'client_root_logger'
    name                     : 'Client js logger'
    desc                     : 'The log level for all root/js loggers [trace, debug, info, warn, error, fatal]'
    current_val_rel_filepath : './client/js/app/config/config.js'
    current_val_regex        : 'level: ''([^\n]*)'', // configure.py: logger-js'
    validation_regex         : '^trace|debug|info|warn|error|fatal$'
  - valkey                   : 'client_event_logger'
    name                     : 'Client events_logger'
    desc                     : 'events_logger (Marionette events) log level [trace, debug, info, warn, error, fatal]'
    current_val_rel_filepath : './client/js/app/config/config.js'
    current_val_regex        : 'level: ''([^\n]*)'', // configure.py: logger-events'
    validation_regex         : '^trace|debug|info|warn|error|fatal$'

  - valkey                   : 'cache_buster'
    name                     : 'Cache buster'
    desc                     : 'Appended to requests for server cache busting, e.g. (new Date()).getTime()'
    current_val_rel_filepath : './client/js/main.js'
    current_val_regex        : 'urlArgs: ''bust='' \+ ([^\n]*), // configure.py: require-urlArgs'
    validation_regex         : '^[^\n]+$'


outputs:
  - output_rel_filepath      : './server/app/config/server.js'
    output_regex_string      : 'http_port: (\d+), // configure.py: server'
    value_template           : '%(http_port)s'
  - output_rel_filepath      : './server/app/config/server.js'
    output_regex_string      : 'https_port: (\d+), // configure.py: server'
    value_template           : '%(https_port)s'
  - output_rel_filepath      : './server/app/config/server.js'
    output_regex_string      : 'server_host: ''([a-zA-Z_0-9.]+)'', // configure.py: server'
    value_template           : '%(server_host)s'
  - output_rel_filepath      : './server/app/config/server.js'
    output_regex_string      : 'q_longStackSupport: (true|false|undefined), // configure.py: server'
    value_template           : '%(server_q_longstacksupport)s'
  - output_rel_filepath      : './server/app/config/server.js'
    output_regex_string      : 'static_max_age: ([\d\*]+), // configure.py: server'
    value_template           : '%(static_cache_max_age)s'

  - output_rel_filepath      : './server/app/util/logger/logger_config.json'
    output_regex_string      : '"level": "([^"]*)"'
    value_template           : '%(server_app_log_level)s'

  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'name: ''([a-zA-Z_]*)'', // configure.py: database'
    value_template           : '%(db_name)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'database_name_check_before_sync: /([a-zA-Z_]*)/, // configure.py: database'
    value_template           : '%(db_name)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'user: ''([a-zA-Z_]*)'', // configure.py: database'
    value_template           : '%(db_name)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'password: ''([^\n]+)'', // configure.py: database'
    value_template           : '%(db_password)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'host: ''([a-zA-Z_.]*)'', // configure.py: database'
    value_template           : '%(db_host)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'port: ''([\d]+)'', // configure.py: database'
    value_template           : '%(db_port)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'schema: ''([a-zA-Z_]+)'', // configure.py: database'
    value_template           : '%(db_schema)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'maxConnections: (\d+), // configure.py: database'
    value_template           : '%(db_max_conn)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'minConnections: (\d+), // configure.py: database'
    value_template           : '%(db_min_conn)s'
  - output_rel_filepath      : './server/app/config/database.js'
    output_regex_string      : 'maxIdleTime: (\d+), // configure.py: database'
    value_template           : '%(db_max_idle_time)s'

  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'client_id: ''(\d*)'', // configure.py: user-facebook'
    value_template           : '%(fb_client_id)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'client_secret: ''([abcdef\d]*)'', // configure.py: user-facebook'
    value_template           : '%(fb_client_secret)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'client_id: ''([a-zA-Z\-_.0-9]*)'', // configure.py: user-google'
    value_template           : '%(google_client_id)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'client_secret: ''([a-zA-Z\-_.0-9]*)'', // configure.py: user-google'
    value_template           : '%(google_client_secret)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'consumer_key: ''([a-zA-Z0-9.]*)'', // configure.py: user-twitter'
    value_template           : '%(twitter_consumer_key)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'consumer_secret: ''([a-zA-Z0-9]*)'', // configure.py: user-twitter'
    value_template           : '%(twitter_consumer_secret)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'logged_in_cookie_name: ''([a-zA-Z_]+)'', // configure.py: user-cookie'
    value_template           : '%(logged_in_cookie_name)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'secret: ''([a-zA-Z_]+)'', // configure.py: user-cookie'
    value_template           : '%(cookie_secret)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'host: ''([a-zA-Z_0-9.]*)'', // configure.py: user-cookie'
    value_template           : '%(cookie_store_host)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'port: ''(\d+)'', // configure.py: user-cookie'
    value_template           : '%(cookie_store_port)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'db: (\d+), // configure.py: user-cookie'
    value_template           : '%(cookie_store_number)s'
  - output_rel_filepath      : './server/app/config/user.js'
    output_regex_string      : 'salt_rounds: (\d+), // configure.py: user-security'
    value_template           : '%(salt_rounds)s'

  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'logged_in_cookie_name: ''([a-zA-Z_]+)'', // configure.py: user-cookie'
    value_template           : '%(logged_in_cookie_name)s'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'q_longStackSupport: (true|false|undefined), // configure.py: client'
    value_template           : '%(client_q_longstacksupport)s'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'fb_client_id: ''(\d*)'', // configure.py: user-facebook'
    value_template           : '%(fb_client_id)s'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'google_client_id: ''([a-zA-Z\-_.0-9]*)'', // configure.py: user-google'
    value_template           : '%(google_client_id)s'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'twitter_consumer_key: ''([a-zA-Z0-9]*)'', // configure.py: user-twitter'
    value_template           : '%(twitter_consumer_key)s'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'fb_auth_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/access/fb/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'fb_reactivate_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/reactivate/fb/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'fb_connect_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/connect/fb/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'google_auth_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/access/google/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'google_reactivate_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/reactivate/google/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'google_connect_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/connect/google/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'twitter_auth_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/access/twitter/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'twitter_reactivate_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/reactivate/twitter/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'twitter_connect_url: ''([^\n]*)'', // configure.py: client-oauth'
    value_template           : 'https://%(server_host)s:%(https_port)s/api/user/connect/twitter/auth'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'level: ''([^\n]*)'', // configure.py: logger-js'
    value_template           : '%(client_root_logger)s'
  - output_rel_filepath      : './client/js/app/config/config.js'
    output_regex_string      : 'level: ''([^\n]*)'', // configure.py: logger-events'
    value_template           : '%(client_event_logger)s'

  - output_rel_filepath      : './client/js/main.js'
    output_regex_string      : 'urlArgs: ''bust='' ([^\n]*), // configure.py: require-urlArgs'
    value_template           : '+ (%(cache_buster)s)'
